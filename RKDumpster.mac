#include RKBase.inc
#include RKCasterBase.inc
#include RKMeleeBase.inc
#include RKCrowdControlBase.inc

Sub Main
	/call Init_RKBase
	/call AddToArray "NonCombatSubs" "BardNonCombatSubs"
	/call Init_RKCrowdControlBase
	/call Init_RKMeleeBase	
	/call Init_RKCasterBase
	
| *** VARIABLE DECLARATIONS
	
	/varset SpellMemSlot 11
	/varset InCombatStickToCommander FALSE
	/varset StickFlags behind
	/declare EchoMode bool outer FALSE
	/declare OverhasteAura bool outer FALSE
	/declare SlowMode bool outer FALSE
	/varset MeleeMode TRUE
	/varset SitBetweenCombat FALSE
	
	/varset CCMode ${Bool[${Group.MainAssist.ID} != ${Me.ID}]}
	/varset CharmMode FALSE
	
	/varset AEMezSpell Wave of Dreams Rk. II
	/varset SingleTargetMez Lullaby of the Forlorn
	/varset SingleTargetMezLevelCap 95
	/varset AEMezSpellLevelCap 93

	/call AddToArray "CombatActionSubs" "ExecuteBardCombatActions"
	/call AddToArray "DefensiveActionSubs" "ExecuteDefensiveActions"	
	/call AddToArray "CombatActionSubs" "CheckTwist"	
	/call AddToArray "InvisModeSubs" "PeriodicGroupInvis"
	/call AddToArray "BurnCombatActionSubs" "ExecuteBurnBardCombatActions"
	
	/declare RequiemTimer timer outer 125

	/declare AESlowSong string outer "Protan's Melodic Binding"
	
	/echo Done initializing bard macro!
	
| *** MAIN LOOP
:loop
	/call CheckSelos
	/call Tick
	/goto :loop
/return

Sub ExecuteBurnBardCombatActions
	|/call RKItemCast "Circle of Power I Effect" "Unsuspected Striker"
	|/call RKDisc "Reflexive Retort"

	/if (${MeleeMode}) {
		/call RKDisc "Thousand Blades"
	} else {
		/call RKDisc "Puretone Discipline"
	}

	/call RKAACast "Fundament: Third Spire of the Minstrels"
	/call RKAACast "Dance of Blades"	
/return FALSE

Sub BardNonCombatSubs
	/if (${DebugMode}) /echo BardNonCombatSubs

	/if (${Me.XTarget[1].ID}) {
		/if (!${Twist}) {
			/if (${Me.XTarget[1].PctHPs} < 95) {
				/echo early escape because i'm a pussy
				/return TRUE
			}
		}
	} else {
		/if (${Twist}) {
			/twist off		
			/stopcast
		}
	}
	
	/if (${OverhasteAura}) {
		/if (!${Bool[${Me.Aura[Aura of Maetanrus Rk. II]}]}) {
			/echo casting aura of Maetanrus
			/twist off
			/delay 10s ${Me.SpellReady[Aura of Maetanrus Rk. II]}
			/call RKCast "Aura of Maetanrus Rk. II" ${Me.ID}
			/delay 6s
			/twist off
			/return TRUE
		}
	} else {
		/if (!${Bool[${Me.Aura[Aura of Sionachie Rk. II]}]}) {
			/echo casting Aura of Sionachie
			/twist off
			/delay 10s ${Me.SpellReady[Aura of Sionachie Rk. II]}
			/call RKCast "Aura of Sionachie Rk. II" ${Me.ID}
			/delay 6s
			/twist off
			/return TRUE			
		}
	}	
	
	/if (!${Me.Buff[Symphony of Battle].ID}) {
		/twist off
		/delay 1s
		/cast item "Rapier of Somber Notes"
		/delay 3s
	}
/return FALSE

Sub CheckAESlow
	/call CountTargetsInRange ${Spell[${AESlowSong}].AERange}
	/if (${Macro.Return} > 1) {
		/call RKDebuffCast "${AESlowSong}" "${AESlowSong}" ${CurrentTargetId}
	}
/return FALSE

Sub ExecuteBardCombatActions
	/if (${DebugMode}) /echo ExecuteBardCombatActions

	/if (${Me.GemTimer[${Me.Gem[Silisia's Lively Crescendo Rk. II]}]} == 0) {
		/twist off
		/stopcast
		/delay 5
		/call RKCast "Silisia's Lively Crescendo Rk. II" ${CurrentTargetId}
		/if (${Macro.Return}) {
			/delay 3s
			/return FALSE
		}
	}
	
	/if (${Me.GemTimer[${Me.Gem[Dichotomic Psalm]}]} == 0 && ${Me.PctEndurance} > 10) {
		/twist off
		/stopcast
		/delay 5
		/call RKCast "Dichotomic Psalm" ${CurrentTargetId}
		/if (${Macro.Return}) {
			/delay 3s
			/return FALSE
		}
	}
	
	/call RKAACast "Boastful Bellow"
	/call RKAACast "Vainglorious Shout"	
	/call RKAACast "Lyrical Prankster"
	/call RKAACast "Song of Stone"
	/call RKAACast "Selo's Kick"
	
	/call RKAACast "Fierce Eye"
	/call RKAACast "Funeral Dirge"
	/call RKAACast "Quick Time"	

/return FALSE

Sub CheckSelos
	/if (${DebugMode}) /echo CheckSelos
	/if (${Me.Buff[Selo's Sonata].ID} && ${Me.Buff[Selo's Sonata].Duration} > 10) /return FALSE
	/call RKAACast "Selo's Sonata"
	|/delay 2
	|/alt activate 231
/return FALSE

Sub PeriodicGroupInvis
	/if (${DebugMode}) /echo Group Invis
	/if (!${Me.Buff[Shauri's Sonorous Clouding].ID} || ${Me.Buff[Shauri's Sonorous Clouding].Duration} < 100) /call RKAACast "Shauri's Sonorious Clouding"
/return FALSE

Sub CheckTwist
	/if (${DebugMode}) /echo CheckTwist

	/if (${Me.XTarget[1].PctHPs} == 100) /return FALSE
	
	
	/if (!${Twist}) {
		/echo Twisting 6 7 8 9 10
		/twist 6 7 8 9 10
	}
/return FALSE

Sub ExecuteDefensiveActions
	/if (${Me.PctHPs} < 50) {
		/call RKDisc "Deftdance Discipline"
		/if (${Macro.Return}) /return TRUE	
	}
	
	/if (${Me.PctHPs} < 80) {
		/call RKDisc "Resistant Discipline"
		/if (${Macro.Return}) /return TRUE		
	}
	
	/if (${Me.PctHPs} < 20 && ${Me.Combat}) {
		/call RKAACast "Fading Memories"
		/if (${Macro.Return}) /return TRUE	
	}
/return FALSE

